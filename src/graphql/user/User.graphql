extend type Query {
  User(id: Int!): User
}

extend type Mutation {
  createUser(input: CreateUserInput!): CreateUserMutationResponse
  updateUser(input: UpdateUserInput!): UpdateUserMutationResponse
  deleteUser(id: Int!): DeleteUserMutationResponse
}

type User {
  id: Int
  uuid: String
  username: String
  email: String
  firstName: String
  middleName: String
  lastName: String
  description: String
  createdAt: Date
  updatedAt: Date
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
  firstName: String!
  middleName: String!
  lastName: String!
  description: String
}

input UpdateUserInput {
  id: Int!
  firstName: String!
  middleName: String!
  lastName: String!
  description: String
}

type CreateUserMutationResponse implements MutationResponse {
  user: User
  success: Boolean!
  message: String!
}

type UpdateUserMutationResponse implements MutationResponse {
  user: User
  success: Boolean!
  message: String!
}

type DeleteUserMutationResponse implements MutationResponse {
  user: User
  success: Boolean!
  message: String!
}
